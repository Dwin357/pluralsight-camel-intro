initial deployment looks good

start mq
 - $ bash /usr/local/bin/apache-activemq-5.15.0/bin/activeme start
stop mq
 - $ bash /usr/local/bin/apache-activemq-5.15.0/bin/activeme stop
view mq ques (hawtio deployed to server && running)
 - http://localhost:8080/hawtio-default-1.5.3/welcome

view front end (app deployed to server && running)
 - http://localhost:8080/order-fulfillment-processor/orderHome
 
 =====================  action steps ====================
 commit 0 - rollback commit
 commit 1 - add gems
 	org.apache.camel :: camel-spring :: 2.15.3
 	org.apache.camel :: camel-spring-javaconfig :: 2.15.3
 	org.apache.camel :: camel-test-spring :: 2.15.3 :: test
 	**bumped version up slightly from example so everything uses spring 4.x.x
 commit 2 - basic file transfer
 	change order-fulfillment.properties in/out folder to point to sub-folder in project
 	copied sample code into IntegrationConfig.java file

(untested for lack of internet / maven errors) 	
commit 3 - add sql adapter component
	add gem :: or.apache.camel :: camel-sql :: 2.15.3
	In integration config - remove file xfr code (just a test) 
	add sql fetcher
	
 
 
 
 
 
 ======================  notes & errors  ==========================
 MAVEN DEPENDENCIES DONT APPEAR WHEN TRYING TO ADD TO DEPLOYMENT BUILD PATH
  - right click project -> maven -> update project
  - right click project -> properties -> deployment assembly -> add -> build path entries -> next -> maven
  
 Tomcat frequently timeing out on boot (45 sec)
  - right click server -> expand "Timeouts" section -> bump to 70 sec 
  
 Maven failed to transfer
  - wipe local maven and reinstall
  - find ~/.m2  -name "*.lastUpdated" -exec grep -q "Could not transfer" {} \; -print -exec rm {} \;
  - maven -> rebuild index of local repo
  - maven -> project update
 
 